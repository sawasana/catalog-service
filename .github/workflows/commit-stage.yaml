name: Commit Stage
on: push

env:
  REGISTRY: ghrc.io
  # IMAGE_NAME: sawasana/catalog-service
  IMAGE_NAME: ${{ github.repository }}
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: mvn --batch-mode --update-snapshots verify

  package:
    name: Package and Publish
    # if: ${{github.ref=='refs/heads/main'}}
    # needs: [build]
    runs-on: ubuntu-22.04
    # permissions:
    #   contents: read
    #   packages: write
    #   security-events: write
    # steps:
    #   - name: Checkout source code
    #     uses: actions/checkout@v4
    #   - name: Set up JDK
    #     uses: actions/setup-java@v4
    #     with:
    #       distribution: temurin
    #       java-version: 21
    #       cache: maven
    #   - name: Build container image
    #     run: ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
    #   - name: OCI image vulnerability scanning
    #     uses: anchore/scan-action@v3
    #     id: scan
    #     with:
    #       image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
    #       fail-build: false
    #       severity-cutoff: high
    #       acs-report-enable: true
    #   - name: Upload vulnerability report
    #     uses: github/codeql-action/upload-sarif@v3
    #     if: success() || failure()
    #     with:
    #       sarif_file: ${{ steps.scan.outputs.sarif }}
    #   - name: Log into container registry
    #     uses: docker/login-action@v3
    #     with:
    #       registry: ${{ env.REGISTRY }}
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GITHUB_TOKEN }}
    #   - name: Publish container image
    #     run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
